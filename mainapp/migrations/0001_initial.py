# Generated by Django 4.1.5 on 2023-01-16 21:18

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import mainapp.models
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('username', models.CharField(db_index=True, max_length=25, unique=True, verbose_name='UserName')),
                ('first_name', models.CharField(blank=True, max_length=25, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=25, verbose_name='Last Name')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Is staff')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is active')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('userslug', models.SlugField(max_length=150, unique=True, verbose_name='UserSlug')),
                ('userpic', models.ImageField(blank=True, default='baseuserpic.jpg', upload_to=mainapp.models.user_directory_path, verbose_name='Аватар')),
                ('theme', models.ImageField(blank=True, upload_to=mainapp.models.user_directory_path, verbose_name='Фон')),
                ('description', models.CharField(blank=True, max_length=150, verbose_name='Пару слов о себе')),
                ('date_joined', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='articles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section', models.CharField(choices=[('economy', 'Экономика'), ('dev', 'Разработка | IT'), ('life', 'Жизнь')], max_length=15)),
                ('title', models.CharField(max_length=150, verbose_name='Заголовок')),
                ('slug', models.SlugField(max_length=1001, unique=True, verbose_name='URL')),
                ('subtitle', models.CharField(blank=True, max_length=350, verbose_name='Подзаголовок')),
                ('text', models.TextField(blank=True, verbose_name='Текст')),
                ('time_create', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('is_published', models.BooleanField(default=True, verbose_name='Опубликовано')),
                ('content', models.FileField(blank=True, upload_to='files/%Y/%m/%d', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'png', 'mp4', 'gif', 'mov', 'heic'], message='Некорректный формат файла!')])),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'Статьи',
                'verbose_name_plural': 'Статьи',
                'ordering': ['time_create'],
            },
        ),
        migrations.CreateModel(
            name='comments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Текст комментария')),
                ('time_create', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Опубликовано')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(editable=False)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='Автор комментария')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='children', to='mainapp.comments', verbose_name='Родительская категория')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cmnts', to='mainapp.articles', verbose_name='Статья')),
            ],
            options={
                'verbose_name': 'Комментарии',
                'verbose_name_plural': 'Комментарии',
                'ordering': ['time_create'],
            },
        ),
        migrations.CreateModel(
            name='сomment_answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Текст комментария')),
                ('time_create', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='Опубликовано')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='Автор комментария')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answs', to='mainapp.comments')),
            ],
            options={
                'verbose_name': 'Ответ на комментарий',
                'verbose_name_plural': 'Ответы на комментарии',
                'ordering': ['time_create'],
            },
        ),
        migrations.CreateModel(
            name='likes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('like', models.BooleanField(default=False, verbose_name='Лайки')),
                ('time_create', models.DateTimeField(auto_now_add=True)),
                ('liked_by', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='Автор лайка')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lks', to='mainapp.articles', verbose_name='Статья')),
            ],
            options={
                'verbose_name': 'Лайки',
                'verbose_name_plural': 'Лайки',
                'ordering': ['time_create'],
            },
        ),
    ]
